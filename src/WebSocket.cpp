/* Copyright 2013-2019 Homegear GmbH
 *
 * homegear-baselib-unittests is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * homegear-baselib-unittests is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with homegear-baselib-unittests.  If not, see
 * <http://www.gnu.org/licenses/>.
 *
 * In addition, as a special exception, the copyright holders give
 * permission to link the code of portions of this program with the
 * OpenSSL library under certain conditions as described in each
 * individual source file, and distribute linked combinations
 * including the two.
 * You must obey the GNU Lesser General Public License in all respects
 * for all of the code used other than OpenSSL.  If you modify
 * file(s) with this exception, you may extend this exception to your
 * version of the file(s), but you are not obligated to do so.  If you
 * do not wish to do so, delete this exception statement from your
 * version.  If you delete this exception statement from all source
 * files in the program, then also delete it here.
*/

#include "WebSocket.h"

void testWebSocket(BaseLib::SharedObjects* bl)
{
    std::cout << "Testing WebSocket..." << std::endl;

    { //Process header in one byte blocks
        std::vector<char> buffer{ 0x01, 126, 0, 0 };

        BaseLib::WebSocket webSocket;
        int32_t processedBytes = webSocket.process(buffer.data(), 1);
        if(processedBytes != 1 || webSocket.isFinished())
        {
            std::cerr << "Error processing first WebSocket byte." << std::endl;
        }

        processedBytes = webSocket.process(buffer.data() + 1, 1);
        if(processedBytes != 1 || webSocket.isFinished())
        {
            std::cerr << "Error processing second WebSocket byte." << std::endl;
        }

        processedBytes = webSocket.process(buffer.data() + 2, 1);
        if(processedBytes != 1 || webSocket.isFinished())
        {
            std::cerr << "Error processing third WebSocket byte." << std::endl;
        }

        processedBytes = webSocket.process(buffer.data() + 3, 1);
        if(processedBytes != 1)
        {
            std::cerr << "Error processing forth WebSocket byte." << std::endl;
        }

        if(!webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket header." << std::endl;
        }
    }

    { //Process first two header bytes and then continue in one byte blocks
        std::vector<char> buffer{ 0x01, 126, 0, 0 };

        BaseLib::WebSocket webSocket;
        int32_t processedBytes = webSocket.process(buffer.data(), 2);
        if(processedBytes != 2 || webSocket.isFinished())
        {
            std::cerr << "Error processing first two WebSocket bytes." << std::endl;
        }

        processedBytes = webSocket.process(buffer.data() + 2, 1);
        if(processedBytes != 1 || webSocket.isFinished())
        {
            std::cerr << "Error processing third WebSocket byte." << std::endl;
        }

        processedBytes = webSocket.process(buffer.data() + 3, 1);
        if(processedBytes != 1)
        {
            std::cerr << "Error processing forth WebSocket byte." << std::endl;
        }

        if(!webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket header." << std::endl;
        }
    }

    { //Process first two and then the second two header bytes
        std::vector<char> buffer{ 0x01, 126, 0, 0 };

        BaseLib::WebSocket webSocket;
        int32_t processedBytes = webSocket.process(buffer.data(), 2);
        if(processedBytes != 2 || webSocket.isFinished())
        {
            std::cerr << "Error processing first two WebSocket bytes." << std::endl;
        }

        processedBytes = webSocket.process(buffer.data() + 2, 2);
        if(processedBytes != 2)
        {
            std::cerr << "Error processing third and forth WebSocket byte." << std::endl;
        }

        if(!webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket header." << std::endl;
        }
    }

    { //Process whole WebSocket header
        std::vector<char> buffer{ 0x01, 126, 0, 0 };

        BaseLib::WebSocket webSocket;
        int32_t processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 4 || !webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket header." << std::endl;
        }
    }

    { //Process full packet
        //"fin" bit, "opcode" => text, "has mask" bit, header size 6, payload size 43
        std::vector<char> buffer = bl->hf.getBinary("81AB29845A2952A62F5A4CF678130BB63B1B1CB1681A4CE06A4B11E6691E1AE63B1B1FBD391D4ABD6C4D1EBD6E1C1CA627");

        BaseLib::WebSocket webSocket;
        int32_t processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 49 || !webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet." << std::endl;
        }

        webSocket.reset(); //Reprocess same packet
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 49 || !webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (2)." << std::endl;
        }
    }

    { //Process second full packet

        //"fin" bit, "opcode" => text, "has mask" bit, 2 length bytes, header size 8
        std::vector<char> buffer = bl->hf.getBinary("81FE13C0910A6826");

        BaseLib::WebSocket webSocket;
        int32_t processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 8 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (3)." << std::endl;
            return;
        }

        buffer = bl->hf.getBinary("EA280255FE641A56F2285204A3245804BD280543E5620742B3304A55E8791C43FC240553FD7E0145F0660404BD280142B3305F13BD281847E36B0555B330337DEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303316BD3B4404C25E2972D428355BBD714A4BF47E0049F544094BF4285204F66F1C70F0661D43B3264A56F078094BE228527DA026590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA384417BD283B72D05E2D04CC77445DB3670D52F9650C68F0670D04AB280F43E55C094AE46F4A0AB37A0954F0671B04AB515B0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303312BD3B4404C25E2972D428355BBD714A4BF47E0049F544094BF4285204F66F1C70F0661D43B3264A56F078094BE228527DA426590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3C4417BD283B72D05E2D04CC77445DB3670D52F9650C68F0670D04AB280F43E55C094AE46F4A0AB37A0954F0671B04AB515F0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331EBD3B4404C25E2972D428355BBD714A4BF47E0049F544094BF4285204F66F1C70F0661D43B3264A56F078094BE228527DA826590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B580AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303317A026590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B5A0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303317A226590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B5C0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303317A426590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B5E0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303317A626590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B500AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47");
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 1024 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (4)." << std::endl;
        }

        buffer = bl->hf.getBinary
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 1024 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (5)." << std::endl;
        }

        buffer = bl->hf.getBinary
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 1024 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (6)." << std::endl;
        }

        buffer = bl->hf.getBinary
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 1024 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (7)." << std::endl;
        }

        buffer = bl->hf.getBinary("C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331EA026590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA325A0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331EA226590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA325C0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331EA426590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA325E0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331EA626590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA32500AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331EA826590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA33580AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331FA026590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA335A0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331FA226590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA335C0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331FA426590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA335E0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331FA626590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA33500AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331FA826590AB3593C67C54F4A7BEC57355B");
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 960 || !webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (8)." << std::endl;
        }

        std::string content(webSocket.getContent().data(), webSocket.getContentSize());
        if(content != "{\"jsonrpc\":\"2.0\",\"method\":\"system.multicall\",\"id\":75,\"params\":[[{\"methodName\":\"getValue\",\"params\":[0,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[1,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[2,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[3,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[4,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[5,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[6,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[7,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[8,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[9,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[10,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[11,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[12,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[13,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[14,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[15,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[16,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[17,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[18,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[19,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[20,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[21,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[22,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[23,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[24,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[25,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[26,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[27,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[28,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[29,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[30,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[31,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[32,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[33,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[34,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[35,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[36,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[37,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[38,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[39,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[40,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[41,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[42,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[43,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[44,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[45,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[46,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[47,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[48,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[49,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[50,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[51,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[52,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[53,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[54,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[55,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[56,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[57,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[58,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[59,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[60,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[61,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[62,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[63,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[64,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[65,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[66,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[67,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[68,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[69,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[70,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[71,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[72,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[73,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[74,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[75,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[76,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[77,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[78,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[79,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[80,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[81,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[82,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[83,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[84,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[85,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[86,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[87,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[88,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[89,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[90,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[91,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[92,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[93,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[94,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[95,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[96,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[97,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[98,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[99,1,\"STATE\"]}]]}")
        {
            std::cerr << "Error processing WebSocket packet (9)." << std::endl;
        }
    }

    { //Process third full packet split into two parts
        //No "fin" bit, "opcode" => text, "has mask" bit, 2 length bytes, header size 8
        std::vector<char> buffer = bl->hf.getBinary("01FE0C00910A6826");

        BaseLib::WebSocket webSocket;
        int32_t processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 8 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (10)." << std::endl;
            return;
        }

        buffer = bl->hf.getBinary("EA280255FE641A56F2285204A3245804BD280543E5620742B3304A55E8791C43FC240553FD7E0145F0660404BD280142B3305F13BD281847E36B0555B330337DEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303316BD3B4404C25E2972D428355BBD714A4BF47E0049F544094BF4285204F66F1C70F0661D43B3264A56F078094BE228527DA026590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA384417BD283B72D05E2D04CC77445DB3670D52F9650C68F0670D04AB280F43E55C094AE46F4A0AB37A0954F0671B04AB515B0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303312BD3B4404C25E2972D428355BBD714A4BF47E0049F544094BF4285204F66F1C70F0661D43B3264A56F078094BE228527DA426590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3C4417BD283B72D05E2D04CC77445DB3670D52F9650C68F0670D04AB280F43E55C094AE46F4A0AB37A0954F0671B04AB515F0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B330331EBD3B4404C25E2972D428355BBD714A4BF47E0049F544094BF4285204F66F1C70F0661D43B3264A56F078094BE228527DA826590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B580AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303317A026590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B5A0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303317A226590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B5C0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303317A426590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B5E0AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47FD7F0D04BD281847E36B0555B3303317A626590AB3593C67C54F4A7BEC261304FC6F1C4EFE6E2647FC6F4A1CB36D0D52C76B0453F4284404E16B1A47FC794A1CCA3B500AA0264A75C54B3C63B357150AEA280543E5620742DF6B0543B3304A41F47E3E47");
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 1024 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (11)." << std::endl;
        }

        buffer = bl->hf.getBinary
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 1024 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (12)." << std::endl;
        }

        buffer = bl->hf.getBinary
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 1024 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (13)." << std::endl;
        }

        buffer = bl->hf.getBinary
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 1032 || webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (14)." << std::endl;
        }

        buffer = bl->hf.getBinary
        processedBytes = webSocket.process(buffer.data(), buffer.size());
        if(processedBytes != 960 || !webSocket.isFinished())
        {
            std::cerr << "Error processing WebSocket packet (15)." << std::endl;
        }

        std::string content(webSocket.getContent().data(), webSocket.getContentSize());
        if(content != "{\"jsonrpc\":\"2.0\",\"method\":\"system.multicall\",\"id\":75,\"params\":[[{\"methodName\":\"getValue\",\"params\":[0,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[1,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[2,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[3,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[4,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[5,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[6,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[7,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[8,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[9,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[10,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[11,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[12,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[13,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[14,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[15,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[16,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[17,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[18,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[19,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[20,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[21,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[22,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[23,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[24,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[25,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[26,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[27,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[28,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[29,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[30,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[31,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[32,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[33,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[34,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[35,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[36,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[37,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[38,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[39,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[40,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[41,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[42,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[43,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[44,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[45,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[46,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[47,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[48,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[49,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[50,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[51,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[52,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[53,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[54,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[55,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[56,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[57,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[58,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[59,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[60,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[61,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[62,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[63,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[64,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[65,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[66,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[67,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[68,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[69,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[70,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[71,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[72,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[73,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[74,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[75,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[76,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[77,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[78,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[79,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[80,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[81,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[82,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[83,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[84,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[85,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[86,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[87,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[88,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[89,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[90,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[91,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[92,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[93,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[94,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[95,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[96,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[97,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[98,1,\"STATE\"]},{\"methodName\":\"getValue\",\"params\":[99,1,\"STATE\"]}]]}")
        {
            std::cerr << "Error processing WebSocket packet (16)." << std::endl;
        }
    }

    std::cout << "Finished testing WebSocket." << std::endl << std::endl;
}